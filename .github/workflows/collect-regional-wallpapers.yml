name: 区域化壁纸收集

on:
  schedule:
    # 针对亚洲地区 - UTC 22:00 (北京时间次日06:00)
    - cron: "0 22 * * *"
    # 针对欧洲地区 - UTC 06:00 (中欧时间07:00/08:00)
    - cron: "0 6 * * *"
    # 针对美洲地区 - UTC 14:00 (美东时间09:00/10:00)
    - cron: "0 14 * * *"
  workflow_dispatch:
    inputs:
      target_countries:
        description: "目标国家（用逗号分隔，如: China,Japan,UnitedStates）"
        required: false
        default: "China,Japan,UnitedStates,UnitedKingdom,Germany,France"
      collect_days:
        description: "收集天数 (1-8)"
        required: false
        default: "1"

permissions:
  contents: write
  actions: read

jobs:
  collect-asian-wallpapers:
    if: github.event.schedule == '0 22 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        country: [China, Japan, SouthKorea, India]

    steps:
      - name: 检出代码库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置 .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 恢复依赖包和构建
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: 收集 ${{ matrix.country }} 壁纸信息
        run: dotnet run --configuration Release
        env:
          AUTO_MODE: "true"
          COLLECT_ALL_COUNTRIES: "false"
          TARGET_COUNTRY: "${{ matrix.country }}"
          COLLECT_DAYS: "${{ github.event.inputs.collect_days || '1' }}"
          CONCURRENT_REQUESTS: "2"
          JSON_FORMAT: "pretty"

      - name: 检查收集结果
        run: |
          echo "=== 检查收集结果 ==="
          echo "当前目录内容:"
          ls -la

          if [ -d "BingWallpaperData" ]; then
            echo "BingWallpaperData 目录存在"
            echo "目录结构:"
            find BingWallpaperData -type f -name "*.json" | head -10
          else
            echo "❌ BingWallpaperData 目录不存在"
          fi

          echo ""
          echo "Git 状态:"
          git status --porcelain || true
          git status

      - name: 提交 ${{ matrix.country }} 数据
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          echo "=== 准备提交数据 ==="

          # 检查是否有变更
          CHANGES=$(git status --porcelain)
          if [ -n "$CHANGES" ]; then
            echo "✅ 发现以下文件变更:"
            echo "$CHANGES"
            
            git add BingWallpaperData/
            echo "已添加文件到暂存区"
            
            git commit -m "🏮 收集 ${{ matrix.country }} 壁纸信息 - $(date +'%Y-%m-%d %H:%M UTC')"
            echo "已创建提交"
            
            # 重试推送机制，最多重试3次
            RETRY_COUNT=0
            MAX_RETRIES=3
            
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              echo "尝试推送... (第 $((RETRY_COUNT + 1)) 次)"
              
              if git push; then
                echo "✅ 推送成功！"
                break
              else
                echo "❌ 推送失败，可能存在并发冲突"
                RETRY_COUNT=$((RETRY_COUNT + 1))
                
                if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                  echo "🔄 准备重试..."
                  
                  # 随机延迟 3-15 秒
                  DELAY=$((3 + RANDOM % 13))
                  echo "等待 ${DELAY} 秒..."
                  sleep $DELAY
                  
                  # 拉取最新变更并rebase
                  echo "📥 拉取最新变更..."
                  git pull --rebase origin main
                  
                  # 检查rebase是否成功
                  if [ $? -eq 0 ]; then
                    echo "✅ Rebase 成功"
                  else
                    echo "❌ Rebase 失败，跳过本次推送"
                    break
                  fi
                else
                  echo "❌ 达到最大重试次数，推送失败"
                  exit 1
                fi
              fi
            done
          else
            echo "ℹ️ 没有发现文件变更，跳过提交"
            echo "可能原因：1) 程序执行失败 2) 数据已存在 3) 网络问题"
          fi

  collect-european-wallpapers:
    if: github.event.schedule == '0 6 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        country: [UnitedKingdom, Germany, France, Spain, Italy, Russia]

    steps:
      - name: 检出代码库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置 .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 恢复依赖包和构建
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: 收集 ${{ matrix.country }} 壁纸信息
        run: dotnet run --configuration Release
        env:
          AUTO_MODE: "true"
          COLLECT_ALL_COUNTRIES: "false"
          TARGET_COUNTRY: "${{ matrix.country }}"
          COLLECT_DAYS: "${{ github.event.inputs.collect_days || '1' }}"
          CONCURRENT_REQUESTS: "2"
          JSON_FORMAT: "pretty"

      - name: 检查收集结果
        run: |
          echo "=== 检查收集结果 ==="
          if [ -d "BingWallpaperData" ]; then
            echo "✅ BingWallpaperData 目录存在"
            find BingWallpaperData -type f -name "*.json" | head -10
          else
            echo "❌ BingWallpaperData 目录不存在"
          fi
          echo "Git 状态:"
          git status --porcelain || true

      - name: 提交 ${{ matrix.country }} 数据
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          CHANGES=$(git status --porcelain)
          if [ -n "$CHANGES" ]; then
            echo "✅ 发现文件变更，准备提交"
            git add BingWallpaperData/
            git commit -m "🇪🇺 收集 ${{ matrix.country }} 壁纸信息 - $(date +'%Y-%m-%d %H:%M UTC')"
            
            # 重试推送机制，最多重试3次
            RETRY_COUNT=0
            MAX_RETRIES=3
            
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              echo "尝试推送... (第 $((RETRY_COUNT + 1)) 次)"
              
              if git push; then
                echo "✅ 推送成功！"
                break
              else
                echo "❌ 推送失败，可能存在并发冲突"
                RETRY_COUNT=$((RETRY_COUNT + 1))
                
                if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                  echo "🔄 准备重试..."
                  
                  # 随机延迟 3-15 秒
                  DELAY=$((3 + RANDOM % 13))
                  echo "等待 ${DELAY} 秒..."
                  sleep $DELAY
                  
                  # 拉取最新变更并rebase
                  echo "📥 拉取最新变更..."
                  git pull --rebase origin main
                  
                  # 检查rebase是否成功
                  if [ $? -eq 0 ]; then
                    echo "✅ Rebase 成功"
                  else
                    echo "❌ Rebase 失败，跳过本次推送"
                    break
                  fi
                else
                  echo "❌ 达到最大重试次数，推送失败"
                  exit 1
                fi
              fi
            done
          else
            echo "ℹ️ 没有发现文件变更，跳过提交"
          fi

  collect-american-wallpapers:
    if: github.event.schedule == '0 14 * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        country: [UnitedStates, Canada, Brazil, Australia]

    steps:
      - name: 检出代码库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置 .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 恢复依赖包和构建
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: 收集 ${{ matrix.country }} 壁纸信息
        run: dotnet run --configuration Release
        env:
          AUTO_MODE: "true"
          COLLECT_ALL_COUNTRIES: "false"
          TARGET_COUNTRY: "${{ matrix.country }}"
          COLLECT_DAYS: "${{ github.event.inputs.collect_days || '1' }}"
          CONCURRENT_REQUESTS: "2"
          JSON_FORMAT: "pretty"

      - name: 检查收集结果
        run: |
          echo "=== 检查收集结果 ==="
          if [ -d "BingWallpaperData" ]; then
            echo "✅ BingWallpaperData 目录存在"
            find BingWallpaperData -type f -name "*.json" | head -10
          else
            echo "❌ BingWallpaperData 目录不存在"
          fi
          echo "Git 状态:"
          git status --porcelain || true

      - name: 提交 ${{ matrix.country }} 数据
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          CHANGES=$(git status --porcelain)
          if [ -n "$CHANGES" ]; then
            echo "✅ 发现文件变更，准备提交"
            git add BingWallpaperData/
            git commit -m "🌎 收集 ${{ matrix.country }} 壁纸信息 - $(date +'%Y-%m-%d %H:%M UTC')"
            
            # 重试推送机制，最多重试3次
            RETRY_COUNT=0
            MAX_RETRIES=3
            
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              echo "尝试推送... (第 $((RETRY_COUNT + 1)) 次)"
              
              if git push; then
                echo "✅ 推送成功！"
                break
              else
                echo "❌ 推送失败，可能存在并发冲突"
                RETRY_COUNT=$((RETRY_COUNT + 1))
                
                if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                  echo "🔄 准备重试..."
                  
                  # 随机延迟 3-15 秒
                  DELAY=$((3 + RANDOM % 13))
                  echo "等待 ${DELAY} 秒..."
                  sleep $DELAY
                  
                  # 拉取最新变更并rebase
                  echo "📥 拉取最新变更..."
                  git pull --rebase origin main
                  
                  # 检查rebase是否成功
                  if [ $? -eq 0 ]; then
                    echo "✅ Rebase 成功"
                  else
                    echo "❌ Rebase 失败，跳过本次推送"
                    break
                  fi
                else
                  echo "❌ 达到最大重试次数，推送失败"
                  exit 1
                fi
              fi
            done
          else
            echo "ℹ️ 没有发现文件变更，跳过提交"
          fi
